power <- prop_power*power_range + power_low
noise <- ((pwr - power_low)/power_range)/10
noise
pwr <- 100
noise <- ((pwr - power_low)/power_range)/10
power <- pwr * rnorm(1, 0, noise)
power <- pwr * rnorm(1, 0, noise)
power <- pwr * rnorm(1, 0, noise)
power <- pwr * rnorm(1, 0, noise)
power <- pwr * rnorm(1, 0, noise)
power <- pwr * rnorm(1, 0, noise)
power <- pwr * rnorm(1, 0, noise)
power <- pwr * rnorm(1, 0, noise)
power <- pwr * rnorm(1, 0, noise)
power <- pwr * rnorm(1, 0, noise)
power <- pwr * (rnorm(1, 0, noise)*power_hi)/power_range
power <- pwr * (rnorm(1, 0, noise)*power_hi)/power_range
power <- pwr * (rnorm(1, 0, noise)*power_hi)/power_range
power <- pwr * (rnorm(1, 0, noise)*power_hi)/power_range
power <- pwr * (rnorm(1, 0, noise)*power_hi)/power_range
power <- pwr * (rnorm(1, 0, noise)*power_hi)/power_range
power <- pwr * (rnorm(1, 0, noise)*power_hi)/power_range
power <- pwr * (rnorm(1, 0, noise)*power_hi)/power_range
pwer_prop <- (pwr - power_low)/power_range
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop * rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop * rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop * rnorm(1, 0, noise)) * power_range + power_low
pwr_prop * rnorm(1, 0, noise)
pwr_prop + rnorm(1, 0, noise)
pwr_prop + rnorm(1, 0, noise)
pwr_prop + rnorm(1, 0, noise)
pwr_prop + rnorm(1, 0, noise)
pwr_prop + rnorm(1, 0, noise)
pwr_prop + rnorm(1, 0, noise)
pwr_prop + rnorm(1, 0, noise)
pwr_prop + rnorm(1, 0, noise)
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/10
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
pwr_prop <- (pwr - power_low)/power_range
noise <- pwr_prop/2
power <- (pwr_prop + rnorm(1, 0, noise)) * power_range + power_low
ang = 45
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
noise <- ((pwr - power_low)/power_range)/5
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
t <- 0
while(t < 10){
t
t <- t + 1
}
while(t < 10){
print(t)
t <- t + 1
}
t <- 0
while(t < 10){
print(t)
t <- t + 1
}
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
coords$y
coords$x
df <- tibble(iter = numeric(),
pwr = numeric(),
ang = numeric(),
true_ang = numeric(),
x = numeric(),
y = numeric())
# let's do some sims...
# vary angle with power and not the power itself?
for(iter in 1:100){
for(pwr in seq(power_low, power_hi, 10)){
# get power noise
noise <- ((pwr - power_low)/power_range)/5
for(ang in seq(angle_low, angle_high, 15)){
# now get angle with noise
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
for(t in seq(0,20,.01))){
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
df <- rbind(df, tibble(iter = iter,
pwr = pwr,
ang = ang,
true_ang = ang_real,
x = coords$x,
y = coords$y))
if(coords$y < 0){
break
}
}
}
}
}
df <- tibble(iter = numeric(),
pwr = numeric(),
ang = numeric(),
true_ang = numeric(),
x = numeric(),
y = numeric())
# let's do some sims...
# vary angle with power and not the power itself?
for(ii in 1:100){
for(pwr in seq(power_low, power_hi, 10)){
# get power noise
noise <- ((pwr - power_low)/power_range)/5
for(ang in seq(angle_low, angle_high, 15)){
# now get angle with noise
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
for(t in seq(0,20,.01))){
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
df <- rbind(df, tibble(iter = ii,
pwr = pwr,
ang = ang,
true_ang = ang_real,
x = coords$x,
y = coords$y))
if(coords$y < 0){
break
}
}
}
}
}
# vary angle with power and not the power itself?
for(ii in 1:100){
for(pwr in seq(power_low, power_hi, 10)){
# get power noise
noise <- ((pwr - power_low)/power_range)/5
for(ang in seq(angle_low, angle_high, 15)){
# now get angle with noise
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
for(t in seq(0,20,.01)){
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
df <- rbind(df, tibble(iter = ii,
pwr = pwr,
ang = ang,
true_ang = ang_real,
x = coords$x,
y = coords$y))
if(coords$y < 0){
break
}
}
}
}
}
max_iter <- 100
# let's do some sims...
# vary angle with power and not the power itself?
for(ii in 1:max_iter){
print(paste(ii/max_iter)*100, "%", sep = "")
for(pwr in seq(power_low, power_hi, 10)){
# get power noise
noise <- ((pwr - power_low)/power_range)/5
for(ang in seq(angle_low, angle_high, 15)){
# now get angle with noise
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
for(t in seq(0,20,.01)){
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
df <- rbind(df, tibble(iter = ii,
pwr = pwr,
ang = ang,
true_ang = ang_real,
x = coords$x,
y = coords$y))
if(coords$y < 0){
break
}
}
}
}
}
ii/max_iter)
ii/max_iter
ii/max_iter)*100
# setup data frame
df <- tibble(iter = numeric(),
pwr = numeric(),
ang = numeric(),
true_ang = numeric(),
x = numeric(),
y = numeric())
max_iter <- 100
# let's do some sims...
# vary angle with power and not the power itself?
for(ii in 1:max_iter){
print(paste((ii/max_iter)*100, "%", sep = "")
for(pwr in seq(power_low, power_hi, 10)){
# get power noise
noise <- ((pwr - power_low)/power_range)/5
for(ang in seq(angle_low, angle_high, 15)){
# now get angle with noise
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
for(t in seq(0,20,.01)){
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
df <- rbind(df, tibble(iter = ii,
pwr = pwr,
ang = ang,
true_ang = ang_real,
x = coords$x,
y = coords$y))
if(coords$y < 0){
break
}
}
}
}
}
df <- tibble(iter = numeric(),
pwr = numeric(),
ang = numeric(),
true_ang = numeric(),
x = numeric(),
y = numeric())
max_iter <- 100
# let's do some sims...
# vary angle with power and not the power itself?
for(ii in 1:max_iter){
print(paste((ii/max_iter)*100, "%", sep = ""))
for(pwr in seq(power_low, power_hi, 10)){
# get power noise
noise <- ((pwr - power_low)/power_range)/5
for(ang in seq(angle_low, angle_high, 15)){
# now get angle with noise
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
for(t in seq(0,20,.01)){
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
df <- rbind(df, tibble(iter = ii,
pwr = pwr,
ang = ang,
true_ang = ang_real,
x = coords$x,
y = coords$y))
if(coords$y < 0){
break
}
}
}
}
}
View(df)
df <- tibble(iter = numeric(),
pwr = numeric(),
ang = numeric(),
true_ang = numeric(),
x = numeric(),
y = numeric())
max_iter <- 100
# let's do some sims...
# vary angle with power and not the power itself?
for(ii in 1:max_iter){
print(paste((ii/max_iter)*100, "%", sep = ""))
for(pwr in seq(power_low, power_hi, 10)){
# get power noise
noise <- ((pwr - power_low)/power_range)/5
for(ang in seq(angle_low, angle_high, 15)){
# now get angle with noise
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
for(t in seq(0,20,.1)){
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
df <- rbind(df, tibble(iter = ii,
pwr = pwr,
ang = ang,
true_ang = ang_real,
x = coords$x,
y = coords$y))
if(coords$y < 0){
break
}
}
}
}
}
head(df)
df %>%
mutate(ang = as.factor(ang)) %>%
ggplot(aes(x, y,
colour = ang)) +
geom_point(alpha = .4) +
facet_wrap(~pwr)
df %>%
mutate(ang = as.factor(ang)) %>%
ggplot(aes(x, y,
colour = ang)) +
geom_point(alpha = .4) +
facet_wrap(~pwr)
df %>%
mutate(ang = as.factor(ang)) %>%
ggplot(aes(x, y,
colour = ang)) +
geom_point(alpha = .1) +
facet_wrap(~pwr)
for(ii in 1:max_iter){
print(paste((ii/max_iter)*100, "%", sep = ""))
for(pwr in seq(power_low, power_hi, 10)){
# get power noise
noise <- ((pwr - power_low)/power_range)/10
for(ang in seq(angle_low, angle_high, 15)){
# now get angle with noise
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
for(t in seq(0,20,.1)){
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
df <- rbind(df, tibble(iter = ii,
pwr = pwr,
ang = ang,
true_ang = ang_real,
x = coords$x,
y = coords$y))
if(coords$y < 0){
break
}
}
}
}
}
# plot this
df %>%
mutate(ang = as.factor(ang)) %>%
ggplot(aes(x, y,
colour = ang)) +
geom_point(alpha = .1) +
facet_wrap(~pwr)
df <- tibble(iter = numeric(),
pwr = numeric(),
ang = numeric(),
true_ang = numeric(),
x = numeric(),
y = numeric())
max_iter <- 10
# let's do some sims...
# vary angle with power and not the power itself?
# actually... put the noise on the power instead of an
for(ii in 1:max_iter){
print(paste((ii/max_iter)*100, "%", sep = ""))
for(pwr in seq(power_low, power_hi, 10)){
# get power noise
noise <- ((pwr - power_low)/power_range)/10
for(ang in seq(angle_low, angle_high, 15)){
# now get angle with noise
ang_prop <- (ang - angle_low)/angle_range
ang_real <- (ang_prop + rnorm(1, 0, noise))
ang_real <- ang_real * angle_range + angle_low
for(t in seq(0,20,.1)){
coords <- parab_mk3(t, height, gravity, pwr, ang_real, 0)
df <- rbind(df, tibble(iter = ii,
pwr = pwr,
ang = ang,
true_ang = ang_real,
x = coords$x,
y = coords$y))
if(coords$y < 0){
break
}
}
}
}
}
# plot this
df %>%
mutate(ang = as.factor(ang)) %>%
ggplot(aes(x, y,
colour = ang)) +
geom_point(alpha = .1) +
facet_wrap(~pwr)
